data = DB %>% filter(`Forma clinică` == lev)
fit <- lm(data = data, log2(`IgM`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgM <- plt_IgM + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgM
ggsave("IgM.png", plt_IgM, device = "png", height=3, width=5, units = "in", dpi=600)
plt_IgM <- DB %>% #select(c("IgM", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgM`, shape=`IgM`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgM`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgM, aes(y=2^`mean.log.IgM`), method = lm)+
# geom_line(data=mean.log.IgM, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgM`)) +
# stat_summary(aes(y=`IgM`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgM`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgM`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgM", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev) %>%
filter(`Days since confirmation`<31)
fit <- lm(data = data, log2(`IgM`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgM <- plt_IgM + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgM
ggsave("IgM.png", plt_IgM, device = "png", height=3, width=5, units = "in", dpi=600)
plt_IgM <- DB %>% #select(c("IgM", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgM`, shape=`IgM`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgM`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgM, aes(y=2^`mean.log.IgM`), method = lm)+
# geom_line(data=mean.log.IgM, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgM`)) +
# stat_summary(aes(y=`IgM`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgM`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgM`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgM", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev) %>%
filter(`Days since confirmation`<40)
fit <- lm(data = data, log2(`IgM`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgM <- plt_IgM + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgM
ggsave("IgM.png", plt_IgM, device = "png", height=3, width=5, units = "in", dpi=600)
plt_IgM <- DB %>% #select(c("IgM", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgM`, shape=`IgM`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgM`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgM, aes(y=2^`mean.log.IgM`), method = lm)+
# geom_line(data=mean.log.IgM, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgM`)) +
# stat_summary(aes(y=`IgM`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgM`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgM`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgM", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev) %>%
filter(`Days since confirmation`<31)
fit <- lm(data = data, log2(`IgM`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgM <- plt_IgM + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgM
ggsave("IgM.png", plt_IgM, device = "png", height=3, width=5, units = "in", dpi=600)
plt_IgG <- DB %>% #select(c("IgG", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgG`, shape=`IgG`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgG`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgG, aes(y=2^`mean.log.IgG`), method = lm)+
# geom_line(data=mean.log.IgG, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgG`)) +
# stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgG`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgG", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev)
fit <- lm(data = data, log2(`IgG`)~`Days since confirmation`) %>%
filter(`Days since confirmation`<31)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.00001) %+%
" [" %+% scales::number(`conf.low`) %+% " - " %+% scales::number(`conf.high`) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev)
fit <- lm(data = data, log2(`IgG`)~`Days since confirmation`) %>%
filter(`Days since confirmation`<31)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.00001) %+%
" [" %+% scales::number(`conf.low`) %+% " - " %+% scales::number(`conf.high`) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgG <- DB %>% #select(c("IgG", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgG`, shape=`IgG`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgG`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgG, aes(y=2^`mean.log.IgG`), method = lm)+
# geom_line(data=mean.log.IgG, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgG`)) +
# stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgG`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgG", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev)
fit <- lm(data = data, log2(`IgG`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.00001) %+%
" [" %+% scales::number(`conf.low`) %+% " - " %+% scales::number(`conf.high`) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgG <- plt_IgG + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgG
ggsave("IgG.png", plt_IgG, device = "png", height=3, width=5, units = "in", dpi=600)
cat("\n\n")
cat(fig_caption("antibody trends", "Averaged and plotted against time since confirmation date, both IgM and IgG values showed an upwoards linear trend, more pronounced in severe compared to milder forms, and in IgG compared to IgM. Log y axis; repeated measurements are joined by thin lines; linear regression line with SE; beta coefficient (log titre change per day)."))
cat("\n\n")
plt_IgG <- DB %>% #select(c("IgG", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgG`, shape=`IgG`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgG`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgG, aes(y=2^`mean.log.IgG`), method = lm)+
# geom_line(data=mean.log.IgG, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgG`)) +
# stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgG`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgG", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev)
fit <- lm(data = data, log2(`IgG`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgG <- plt_IgG + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgG
ggsave("IgG.png", plt_IgG, device = "png", height=3, width=5, units = "in", dpi=600)
cat("\n\n")
cat(fig_caption("antibody trends", "Averaged and plotted against time since confirmation date, both IgM and IgG values showed an upwoards linear trend, more pronounced in severe compared to milder forms, and in IgG compared to IgM. Log y axis; repeated measurements are joined by thin lines; linear regression line with SE; beta coefficient (log titre change per day)."))
cat("\n\n")
plt_IgG <- DB %>% #select(c("IgG", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgG`, shape=`IgG`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgG`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgG, aes(y=2^`mean.log.IgG`), method = lm)+
# geom_line(data=mean.log.IgG, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgG`)) +
# stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgG`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgG", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev) %>%
filter(`Days since confirmation`<31)
fit <- lm(data = data, log2(`IgG`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgG <- plt_IgG + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgG
ggsave("IgG.png", plt_IgG, device = "png", height=3, width=5, units = "in", dpi=600)
cat("\n\n")
cat(fig_caption("antibody trends", "Averaged and plotted against time since confirmation date, both IgM and IgG values showed an upwoards linear trend, more pronounced in severe compared to milder forms, and in IgG compared to IgM. Log y axis; repeated measurements are joined by thin lines; linear regression line with SE; beta coefficient (log titre change per day)."))
cat("\n\n")
plt_IgG <- DB %>% #select(c("IgG", "Days since confirmation", "FO")) %>% na.omit() %>%
filter(!is.na(`Forma clinică`)) %>%
ggplot(aes(x=`Days since confirmation`)) +
facet_wrap(.~`Forma clinică`, labeller = labeller(`Forma clinică` = label_prefix(my_prefix = metadata.var_to_labels("Forma clinică", metadata), sep = ": ", wrap=25))) +
geom_point(aes(y=`IgG`, shape=`IgG`>0.8), size=1, alpha=0.5) +
geom_line(aes(y=`IgG`, group=`FO`, color=as.Date(`Confirmation date`)), size=1/3, alpha=0.5) +
#geom_smooth(data=mean.log.IgG, aes(y=2^`mean.log.IgG`), method = lm)+
# geom_line(data=mean.log.IgG, inherit.aes = F, aes(x = `Days since confirmation`, y=2^`mean.log.IgG`)) +
# stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "pointrange")+
stat_summary(aes(y=`IgG`, x=`Days since confirmation`), geom = "line")+
geom_smooth(aes(y=`IgG`), method = lm, color="red")+
#stat_count(aes(y = ..count..), geom="line", color="blue") +
#scale_y_log10()+ annotation_logticks(base = 10, sides = "l", scaled = T) +
scale_y_log10("Log IgG", breaks = 2^c(-2:10), labels = c("1/"%+%2^c(2:1), 2^c(0:10)), limits=c(0.25, 256)) +
no.minor_grid.y +
scale_shape_circlefill() +
scale_colour_gradient2_tableau("Data confirmării", palette = "Temperature Diverging", trans="date",
limits =as.Date.character(c("2020-03-01", "2020-09-01")))+
guides(shape=F,
color=F
# guide_colorsteps(show.limits = F, even.steps = F, ticks = 7,
#                        draw.ulim=T, draw.llim=T, direction="horizontal", title.position="top",
#                        barwidth=unit(40, "mm"))
) +
legend.top_left+
scale_x_continuous("Durata de la confirmare (zile)", limits = c(-0.5, 31), breaks = seq(0, 100, 7)) +
no.minor_grid.x
# rr.table
beta.labels = data.frame(`Forma clinică` = levels(DB$`Forma clinică`)) %>% set_colnames(c("Forma clinică"))
for (lev in beta.labels$`Forma clinică`) {
data = DB %>% filter(`Forma clinică` == lev) %>%
filter(`Days since confirmation`<31)
fit <- lm(data = data, log2(`IgG`)~`Days since confirmation`)
beta.table <- broom::tidy(fit) %>% cbind( broom::confint_tidy(fit) ) %>%
mutate(`p-value` = scales::pvalue(p.value, add_p = T), `p-stars` = pstars(p.value)) %>%
mutate(label = scales::number(`estimate`, 0.001) %+%
" [" %+% scales::number(`conf.low`, 0.001) %+% " - " %+% scales::number(`conf.high`, 0.001) %+% "] " %+%
`p-stars`)
beta.labels$label[beta.labels$`Forma clinică` == lev] = "beta = " %+% beta.table$label[2]
}
plt_IgG <- plt_IgG + #labs(subtitle = "RR = " %+% rr.table$label[2])
geom_text(data=beta.labels, aes(label=`label`), x=0, y=log10(180), size=3, hjust=0, vjust=0)
plt_IgG
ggsave("IgG.png", plt_IgG, device = "png", height=3, width=5, units = "in", dpi=600)
cat("\n\n")
cat(fig_caption("antibody trends", "Averaged and plotted against time since confirmation date, both IgM and IgG values showed an upwoards linear trend, more pronounced in severe compared to milder forms, and in IgG compared to IgM. Log y axis; repeated measurements are joined by thin lines; linear regression line with SE; beta coefficient (log titre change per day)."))
cat("\n\n")
#```{r setup, echo=F, message=F, warning=F}
#, results='hide'}
library(tidyverse)
library(magrittr)
#library(ggExtra) # ggMarginal()
#library(cowplot) # plot_grid
library(ggpubr)
library(ggthemes)
#library(ggcorrplot)
#library(GGally) #ggpairs
#library(dplyr)
library(readxl)
library(grid)
library(pander)
panderOptions('digits', 2)
panderOptions('round', 2)
panderOptions('keep.trailing.zeros', TRUE)
options(scipen = 999)
options(digits = 3)
library(knitr)
#library(formattable)
library(kableExtra)
library(ggfortify)
library(survival)
library(Hmisc)
#library(stringr)
library(DescTools)
options(knitr.table.format = "pandoc")
knitr::opts_chunk$set(comment = NA)
library(captioner)
fig_caption <- captioner::captioner("Figure")
tab_caption <- captioner::captioner("Table")
options(knitr.table.format = "pandoc")
MAIN.FONT <- "Arial"
# set orthogonal contrasts
# options(contrasts = c("contr.sum", "contr.poly"))
# regular contrasts
# options(contrasts = c("contr.treatment", "contr.poly"))
set.seed(1)
#```
#```{r Source scripts, message=F, warning=F, echo=F, results='hide'}
base_path = "~/Dropbox/Stats/"
source(paste0(base_path, 'R library/search_for_variable.R'), echo=F)
source(paste0(base_path, 'R library/mySSby.R'), echo=F)
source(paste0(base_path, 'R library/mySSby3.R'), echo=F) # replace finalfit
source(paste0(base_path, 'R library/describe_numerice1.R'), echo=F)
source(paste0(base_path, 'R library/contingency.R'), echo=F)
source(paste0(base_path, 'R library/describe2x2_v1.R'), echo=F)
source(paste0(base_path, 'R library/mytheme.R'), echo=F)
source(paste0(base_path, 'R library/assorted bits.R'), echo=F)
source(paste0(base_path, 'R library/custom_charts.R'), echo=F)
# theme_set(my_theme(base_theme = theme_grey))
setwd(paste0(base_path, "2020/Covid clinic"))
#```
#```{r Import data, echo=F, message=F, warning=F, fig.height=4, fig.width=6}
metadata <- suppressWarnings(read_excel("DB1.xlsx", sheet = "metadata"))
baza_de_date <- suppressWarnings(read_excel("DB1.xlsx", col_types = metadata$Type)) %>%
#mutate(`Invaliditate/Grad` = str_remove_all(`Invaliditate/Grad`, "x")) %>%
labelled::set_variable_labels(.labels = metadata$Var) %>%
#mutate_if(is.character, factor) %>%
mutate_at(metadata$ID[ #metadata$Type %in% c("text") &
metadata$Role %in% c("danu" ,"binary", "factor", "ordered", "likert")], as.factor_metadata, metadata=metadata, debug=F) %>%
labelled::set_variable_labels(.labels = metadata$Label) %>%
#select(-c("ID", "Nume")) %>%
filter(`Exclude` == "no") %>%
select(-c(metadata$Var[metadata$Role=="exclude"])) %>%
select(-c(metadata$Var[metadata$Role=="id"]))
#summary(baza_de_date)
metadata <- make_metadata(baza_de_date, existing.metadata = metadata)
#write.csv(metadata, "metadata.csv", na = "")
my.groups <- list()
for (gr in unique(na.omit(metadata$Group))) {
my.groups[[gr]] <- make_groups_metadata(gr, metadata)
}
for (s in metadata$Var[metadata$Role == "separate"]) {
#print(s)
temp <- separate_metadata(baza_de_date, s, metadata = metadata, exact = F, add.prefix=F)
#group <- metadata$Group[metadata$Var == s]
group <- metadata.var_to_labels(s, metadata)
# temp <- labelled::set_variable_labels(temp, .labels = names(temp))
for (x in 1:ncol(temp))
if (names(temp)[x] %in% names(baza_de_date))
names(temp)[x] <- names(temp) %+% " "
baza_de_date %<>% select(-c(s)) %>% bind_cols(temp)
my.groups[[group]] <- names(temp)
metadata <- make_metadata(DB = baza_de_date, vars = names(temp), existing.metadata = metadata,
label = as.character(labelled::var_label(temp)),
group = group)
}
baza_de_date %<>% select(unlist(my.groups, use.names = F))
IgGs = "IgG " %+% 1:5
IgMs = "IgM " %+% 1:5
PCRs = "RT - PCR " %+% 1:5
test_days = "Test " %+% 1:5 %+% " (days)"
# for (gr in sort(names(my.groups))) {
#   print(gr)
#   print(summary(baza_de_date[my.groups[[gr]]]))
# }
# summary(baza_de_date, maxsum = 10)
#DescTools::Desc(baza_de_date)
# summary(my.groups)
# my.groups
#names(baza_de_date)
#summary(baza_de_date)
DB <- bind_cols(
baza_de_date %>% select(c(test_days, "FO", "Confirmation date", "Clinical form")) %>%
tidyr::gather("dontcare", "Days since confirmation", test_days) %>%
select(c("Days since confirmation", "FO", "Confirmation date", "Clinical form")) %>%
mutate(`Forma clinică` = forcats::fct_collapse(`Clinical form`,
`asimptomatică-ușoară` = c("asymptomatic", "mild"),
`medie-severă` = c("intermediate", "severe", "critical"))),
baza_de_date %>% select(c(PCRs)) %>% tidyr::gather("dontcare", "RT - PCR", PCRs) %>%
select(c("RT - PCR")) %>% mutate(`RT - PCR` = factor(`RT - PCR`, levels = c("detectable", "negative"))),
baza_de_date %>% select(c(IgMs)) %>% tidyr::gather("dontcare", "IgM", IgMs) %>% select(c("IgM")),
baza_de_date %>% select(c(IgGs)) %>% tidyr::gather("dontcare", "IgG", IgGs) %>% select(c("IgG"))
) #%>% na.omit() # %>% mutate(`Log IgM` = log2(`IgM`), `Log IgG` = log2(`IgG`))
# DB %>% group_by(FO) %>%
#   na.omit() %>%
#   summarise(n = n()) %>%
#   mutate(n=factor(n)) %>%
#   ungroup()%>%
#   group_by(n) %>% summary()
#   #summary
DB %>%
mutate (`Interval` = cut(`Days since confirmation`, breaks=c(0, 3, 7, 14, 21, 28, Inf), right=T) %>% factor) %>%
select(c("Interval","RT - PCR", "IgM","IgG")) %>%
make_summary_table(dep="Interval",# metadata = make_metadata(db, existing.metadata = metadata),
g.rows = c("mean_sd", "geo_mean", "med_range", "med_iqr"), prefer="parametric")
